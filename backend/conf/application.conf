# https://www.playframework.com/documentation/latest/Configuration

play.http.secret.key = "dev-secret-dev-secret-dev-secret-dev-secret"
play.http.secret.key = ${?VDJSIGHT_APPLICATION_SECRET}

play.i18n.langs = ["en"]

slick.dbs.default.profile   = "slick.jdbc.PostgresProfile$"
slick.dbs.default.db.driver = "org.postgresql.Driver"
slick.dbs.default.db.url    = "jdbc:postgresql://localhost:5432/vdjsight-dev?user=dev&password=dev"
slick.dbs.default.db.url    = ${?VDJSIGHT_DATABASE_URL}

play.evolutions.db.default.autoApply = true

play.modules.enabled += "effects.EffectsModule"

application {


  users {

    # Default permission for new users
    permissions.maxProjectsCount         = 5                     # Max projects count allowed to create
    permissions.maxProjectsCount         = ${?VDJSIGHT_APPLICATION_USERS_PERMISSIONS_MAX_PROJECT_COUNT}

    permissions.maxSamplesCount          = 5                     # Max samples count allowed to upload on server
    permissions.maxSamplesCount          = ${?VDJSIGHT_APPLICATION_USERS_PERMISSIONS_MAX_SAMPLES_COUNT}

    permissions.maxSampleSize            = 320 MiB               # Max sample size allowed to upload on server
    permissions.maxSampleSize            = ${?VDJSIGHT_APPLICATION_USERS_PERMISSIONS_MAX_SAMPLE_SIZE}

    permissions.maxDanglingProjectLinks  = 5                     # Max project count allowed to be in dangling state (deferred delete) [ >= maxProjectsCount ]
    permissions.maxDanglingProjectLinks  = ${?VDJSIGHT_APPLICATION_USERS_PERMISSIONS_MAX_DANGLING_PROJECT_LINKS}

    permissions.maxDanglingSampleLinks   = 5                     # Max sample count allowed to be in dangling state (deferred delete)  [ >= maxSamplesCount ]
    permissions.maxDanglingSampleLinks   = ${?VDJSIGHT_APPLICATION_USERS_PERMISSIONS_MAX_DANGLING_SAMPLE_LINKS}

  }

  auth {

    # Common authorization controller configuration
    controller.delay = 2 seconds                                 # Delay authorization response
    controller.delay = ${?VDJSIGHT_APPLICATION_AUTH_CONTROLLER_DELAY}

    # Verification token configuration
    verification.method   = "console"                            # Verification method (email, console, auto or noop)
    verification.method   = ${?VDJSIGHT_APPLICATION_AUTH_VERIFICATION_METHOD}

    verification.link     = "http://localhost:4200/auth/verify"  # Verification link prefix
    verification.link     = ${?VDJSIGHT_APPLICATION_AUTH_VERIFICATION_LINK}

    verification.keep     = 24 hours                             # Specify the time during which the token is guaranteed to be valid
    verification.keep     = ${?VDJSIGHT_APPLICATION_AUTH_VERIFICATION_KEEP}

    verification.interval = 24 hours                             # Specify an interval for deleting expired tokens
    verification.interval = ${?VDJSIGHT_APPLICATION_AUTH_VERIFICATION_INTERVAL}

    # Reset token configuration
    reset.method   = "console"                                   # Reset method (email, console or noop)
    reset.method   = ${?VDJSIGHT_APPLICATION_AUTH_RESET_METHOD}

    reset.link     = "http://localhost:4200/auth/reset"          # Reset link prefix
    reset.link     = ${?VDJSIGHT_APPLICATION_AUTH_RESET_LINK}

    reset.keep     = 24 hours                                    # Specify the time during which the token is guaranteed to be valid
    reset.keep     = ${?VDJSIGHT_APPLICATION_AUTH_RESET_KEEP}

    reset.interval = 24 hours                                    # Specify an interval for deleting expired tokens
    reset.interval = ${?VDJSIGHT_APPLICATION_AUTH_RESET_INTERVAL}

  }

  projects {

    # Default configuration for new projects
    storagePath     = "/tmp/vdjsight/projects"       # Default folder path to store projects's temporary data
    storagePath     = ${?VDJSIGHT_APPLICATION_PROJECTS_STORAGE_PATH}

    # Default delete links configuration
    links.delete.keep     = 24 hours                 # Specify the time during which the deleted link can be restored
    links.delete.keep     = ${?VDJSIGHT_APPLICATION_PROJECTS_LINKS_DELETE_KEEP}

    links.delete.interval = 1 hour                   # Specify an interval for deleting expired links
    links.delete.interval = ${?VDJSIGHT_APPLICATION_PROJECTS_LINKS_DELETE_INTERVAL}

  }

  samples {

    # Default configuration for new samples
    storagePath   = "/tmp/vdjsight/samples"          # Default folder path to store samples's temporary data
    storagePath   = ${?VDJSIGHT_APPLICATION_SAMPLES_STORAGE_PATH}

    maxSampleSize = 320MiB                           # Default size restriction for upload handler [ >= users.permissions.maxSampleSize ]
    maxSampleSize = ${?VDJSIGHT_APPLICATION_SAMPLES_MAX_SAMPLE_SIZE}

    links.delete.keep     = 24 hours                 # Specify the time during which the deleted link can be restored
    links.delete.keep     = ${?VDJSIGHT_APPLICATION_SAMPLES_LINKS_DELETE_KEEP}

    links.delete.interval = 1 hour                   # Specify an interval for deleting expired links
    links.delete.interval = ${?VDJSIGHT_APPLICATION_SAMPLES_LINKS_DELETE_KEEP}
  }

  analysis {

    pool.threads = 4
    pool.threads = ${?VDJSIGHT_APPLICATION_ANALYSIS_POOL_THREADS}

    cache.keep     = 24 hours                        # Specify the time during which the cache is guaranteed to be valid
    cache.keep     = ${?VDJSIGHT_APPLICATION_ANALYSIS_CACHE_KEEP}

    cache.interval = 24 hours                        # Specify an interval for deleting expired cache
    cache.interval = ${?VDJSIGHT_APPLICATION_ANALYSIS_CACHE_INTERVAL}

    cache.maxCount = 3                               # Max cache entries count allowed to create for single sample analysis type
    cache.maxCount = ${?VDJSIGHT_APPLICATION_ANALYSIS_CACHE_MAX_COUNT}

  }

}

play.filters.disabled += "play.filters.csrf.CSRFFilter"
play.filters.enabled  += "play.filters.cors.CORSFilter"

play.filters.hosts {
  allowed = [ "localhost" ]
  allowed = ${?VDJSIGHT_PLAY_FILTERS_HOSTS_ALLOWED}
}

play.filters.cors {
  allowedOrigins     = [ "https://localhost:4200" ]
  allowedOrigins     = ${?VDJSIGHT_PLAY_FILTERS_CORS_ALLOWED_ORIGINS}

  pathPrefixes       = [ "/" ]
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
  allowedHttpHeaders = null
}

play.http {

  # Session configuration
  session = {

    # The cookie name
    cookieName = "VDJSIGHT_SESSION"

    # Whether the secure attribute of the cookie should be set to true
    secure = true
    secure = ${?VDJSIGHT_PLAY_HTTP_SESSION_SECURE}

    # The max age to set on the cookie.
    # If null, the cookie expires when the user closes their browser.
    # An important thing to note, this only sets when the browser will discard the cookie.
    maxAge = 30 days

    # Whether the HTTP only attribute of the cookie should be set to true
    httpOnly = true

    # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
    # Possible values are "lax" and "strict". If misconfigured it's set to null.
    sameSite = "strict"

    # The domain to set on the session cookie
    # If null, does not set a domain on the session cookie.
    domain = localhost
    domain = ${?VDJSIGHT_PLAY_HTTP_SESSION_DOMAIN}

    # The session path
    # Must start with /.
    path = ${play.http.context}

    jwt {
      # The JWT signature algorithm to use on the session cookie
      # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
      signatureAlgorithm = "HS256"

      # The time after which the session is automatically invalidated.
      # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
      expiresAfter = ${play.http.session.maxAge}

      # The amount of clock skew to accept between servers when performing date checks
      # If you have NTP or roughtime synchronizing between servers, you can enhance
      # security by tightening this value.
      clockSkew = 5 minutes

      # The claim key under which all user data is stored in the JWT.
      dataClaim = "data"
    }
  }
}
